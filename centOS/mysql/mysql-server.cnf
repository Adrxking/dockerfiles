# --- COSAS QUE HACER DESPUÉS DE ACTUALIZAR EL MY.CNF - ERRORES ---
#
# Si MySQL o MariaDB no puede comenzar (o reiniciar), entonces prueba lo siguiente.
#
# 1. Si el server tenía la configuración de la BD por defecto y has añadido o actualizado cualquier
#    "innodb_log_*", entonces debes ejecutar estos comandos solamente
#    la primera vez que aplicas esta configuración:
#
#    $ rm -rvf /var/lib/mysql/ib_logfile*
#    $ chown -R mysql:mysql /var/lib/mysql
#    $ service mysql restart
#
#
# 2. Si los ajustes "bind-address" no están comentados, entonces comprueba que el archivo /etc/hosts está
#    configurado correctamente. Un buen ejemplo de un archivo /etc/hosts limpio es algo como:
#
#    127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
#    ::1       localhost localhost.localdomain localhost6 localhost6.localdomain6
#    1.2.3.4   hostname.domain.tld hostname # <-- Reemplaza respectivamente!
#
#    Finalmente reinicia el servicio de la BD:
#
# 3. Si el servicio de la BD no se ha podido reiniciar incluso después de los primeros 2 pasos , comprueba la carpeta de la BD
#    (común para MySQL o MariaDB) "/var/lib/mysql" es propiedad del usuario y grupo "mysql".
#    Adicionalmente, la carpeta puede tener permisos 0751 o 0755. Para arreglarlo, simplemente haz:
#    $ chown -R mysql:mysql /var/lib/mysql
#    $ chmod 0755 /var/lib/mysql

[mysql]
port                            = 3306
socket                          = /var/run/mysqld/mysqld.sock

[mysqld]
# === Configuración obligatoria ===
basedir                         = /usr
bind_address                    = 0.0.0.0 # Cambiar a 127.0.0.1 si no queremos conexiones remotas
datadir                         = /var/lib/mysql
max_allowed_packet              = 256M
max_connect_errors              = 1000000
pid_file                        = /var/run/mysqld/mysqld.pid
port                            = 3306
skip_external_locking
skip_name_resolve
socket                          = /var/run/mysqld/mysqld.sock
tmpdir                          = /tmp
user                            = mysql

# === Configuración InnoDB ===
default_storage_engine          = InnoDB
innodb_buffer_pool_instances    = 4     # Usar 1 instancia por cada 1GB de tamaño de la pool de InnoDB - maximo es 64
innodb_buffer_pool_size         = 4G    # Usar mas del 70-80% of RAM
innodb_file_per_table           = 1
innodb_flush_log_at_trx_commit  = 0
innodb_flush_method             = O_DIRECT
innodb_log_buffer_size          = 16M
innodb_log_file_size            = 1G
innodb_stats_on_metadata        = 0
#innodb_use_fdatasync           = 1     # Solo para MySQL v8.0.26+ (!)

#innodb_temp_data_file_path     = ibtmp1:64M:autoextend:max:20G # Controlar el tamaño máximo para el archivo ibtmp1
#innodb_thread_concurrency      = 4     # Opcional: Poner el número de CPUs de tu sistema (min 1 o 2) para
                                        # mejorar el uso de la CPU. Ej. Si tu sistema tiene 8 CPUs, prueba 6 o 7 y comprueba
                                        # la carga máxima producida por MySQL/MariaDB.
innodb_read_io_threads          = 64
innodb_write_io_threads         = 64
#innodb_io_capacity             = 2000  # Depende de la tecnología de almacenamiento - usar 2000 for SSD, o más para NVMe
#innodb_io_capacity_max         = 4000  # Generalmente usar el doble de innodb_io_capacity

# === Configuración MyISAM ===
# Las siguientes 3 opciones son solo soportadas por MariaDB y MySQL 5.7 o +
# No descomentar en MySQL 8.x+
#query_cache_limit              = 4M    # UPD
#query_cache_size               = 64M   # UPD
#query_cache_type               = 1     # Activado por defecto

key_buffer_size                 = 24M   # UPD

low_priority_updates            = 1
concurrent_insert               = 2

# === Configuración de Conexión ===
max_connections                 = 100   # UPD - Importante: Alto num de conexiones = alto consumo de RAM

back_log                        = 512
thread_cache_size               = 100
thread_stack                    = 192K

interactive_timeout             = 180
wait_timeout                    = 180

# Solamente MySQL 5.7+ (desativado por defecto)
#max_execution_time             = 90000  # Poner tiempo de espera límite a declaraciones SELECT (valor en milisegundos).
                                        # Esta opción podría ser útil para grandes cantidades de consultas,
                                        # pero podría causar errores (ej. con backups). Usar con extrema precaución y testear.

# Solamente MariaDB 10.1.1+ (desativado por defecto)
#max_statement_time             = 90    # El equivalente a "max_execution_time" en MySQL 5.7+
                                        # la variable es de tipo double, por lo tanto puedes usar subsegundo de timeout.
                                        # Ej. puedes usar el valor 0.01 para 10 milisegundos de timeout.

# === Configuración del Buffer ===
innodb_sort_buffer_size         = 2M    # UPD
join_buffer_size                = 4M    # UPD
read_buffer_size                = 3M    # UPD
read_rnd_buffer_size            = 4M    # UPD
sort_buffer_size                = 4M    # UPD

# === Configuración de Tablas ===
# Para sistemas administrados por systemd como Ubuntu 16.04+ o CentOS 7+, necesitas llevar a cabo acciones extra para table_open_cache y open_files_limit
# para ser anulados.
table_definition_cache          = 40000 # UPD
table_open_cache                = 40000 # UPD
open_files_limit                = 60000 # UPD - Este valor puede ser desde 2x a 3x el table_open_cache o encuentra el límite
                                        # de archivos abiertos del sistema generalmente en /etc/sysctl.conf y /etc/security/limits.conf
                                        # En sistemas administrados por systemd este límite deben ser colocados también en:
                                        # - /etc/systemd/system/mysql.service.d/override.conf (para MySQL 5.7+ en Ubuntu) o
                                        # - /etc/systemd/system/mysqld.service.d/override.conf (para MySQL 5.7+ en CentOS) o
                                        # - /etc/systemd/system/mariadb.service.d/override.conf (para MariaDB)
                                        # de otro modo cambiando open_files_limit no tendrá efecto.
                                        #
                                        # Para editar el archivo correcto ejecuta:
                                        # $ systemctl edit mysql (o mysqld o mariadb)
                                        # y pon "LimitNOFILE=" a algo como 100000 o más (dependiendo de los límites de tu sistema para MySQL)
                                        # o usa "LimitNOFILE=infinity" para MariaDB solamente.
                                        # Finalmente combina los cambios con:
                                        # $ systemctl daemon-reload; systemctl restart mysql (o mysqld o mariadb)

max_heap_table_size             = 128M  # Incrementar a 256M o 512M si tienes muchas tablas temporales por pérdida de indices en JOINs
tmp_table_size                  = 128M  # Usar el mismo valor que max_heap_table_size

# === Configuración de Búsqueda ===
ft_min_word_len                 = 3     # Longitud mínima de palabras para ser indexadas para resultados de búsqueda

# === Logs ===
# Nota: Log binario está activado por defecto en MySQL 8+
#       Desactivalo completamente o configuralo en los ajustes siguientes

#skip_log_bin                           # Desactivar bin log
#expire_logs_days               = 1     # Mantener logs por 1 día - Deprecado en MySQL 8+
binlog_expire_logs_seconds     = 86400  # Mantener logs por 1 día - Use on MySQL 8+ only (!)

log_error                       = /var/lib/mysql/mysql_error.log

log_queries_not_using_indexes   = 0     # Desactivado en producción
long_query_time                 = 5
slow_query_log                  = 0     # Desactivado en producción
slow_query_log_file             = /var/lib/mysql/mysql_slow.log

[mysqldump]
quick
quote_names
max_allowed_packet              = 1024M